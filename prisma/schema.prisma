generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar(100)
  email    String    @unique
  password String
  img_uri  String?   @db.VarChar(255)
  comment  Comment[]
  liks     Like[]
  posts    Post[]
}

model Post {
  id        Int           @id @default(autoincrement())
  title     String        @db.VarChar(255)
  contents  String
  steps     Json
  country   String        @db.VarChar(255)
  region    String
  userId    Int
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  user      User          @relation(fields: [userId], references: [id])
  comment   Comment[]
  liks      Like[]
  images    Post_Image[]
  tags      tagsOnPosts[]
}

model Tag {
  id          Int           @id @default(autoincrement())
  name        String
  slug        String        @unique
  description String
  posts       tagsOnPosts[]
}

model tagsOnPosts {
  postId Int
  tagId  Int
  post   Post @relation(fields: [postId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

model Comment {
  id     Int    @id @default(autoincrement())
  text   String
  userId Int
  postId Int
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id])
}

model Post_Image {
  id      Int    @id @default(autoincrement())
  img_uri String
  postId  Int
  post    Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Like {
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user   User @relation(fields: [userId], references: [id])

  @@id([postId, userId])
}
